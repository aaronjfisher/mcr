% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_search_mcr.r
\name{get_MR_general}
\alias{get_MR_general}
\alias{precompute_mcr_objects_and_functions}
\alias{mcr_set}
\alias{get_empirical_MCR}
\title{Compute MR & MCR}
\usage{
get_MR_general(model, precomputed = NA, ...)

precompute_mcr_objects_and_functions(X, y, p1, model_class_loss = NULL,
  minimize_weighted_loss = NULL, get_loss = NULL, nrep_sample = 2,
  loop_ind_args = NULL)

get_empirical_MCR(eps, precomputed = NA, ...)
}
\arguments{
\item{model}{model for which MR should be evaluated. If applicable, this should match the output of \code{minimize_weighted_loss}, and be an input for \code{get_loss}.}

\item{precomputed}{output from \code{precompute_mcr_objects_and_functions}}

\item{...}{passed to \code{precompute_mcr_objects_and_functions} (and \code{\link{getMCR_internal}} for advanced options).}

\item{X}{a matrix or dataframe of covariates}

\item{y}{outcome vector}

\item{p1}{numeric index marking which columns of X to compute importance for.}

\item{model_class_loss}{(optional) Signify a preset model class and loss function for which existing code in the package is already written. Currently supports 'linear_mse' for linear regression with the squared error loss; 'kernel_mse' for regression in a reproducing kernel Hilbert space, with the squared error loss; and 'linear_hinge' for linear classification with the hinge loss (y = -1 or 1). If this option is not set, both \code{minimize_weighted_loss} and \code{get_loss} must be set.}

\item{minimize_weighted_loss}{(optional) a function with named inputs \code{X}, \code{y}, \code{case.weights}, and (optionally) \code{start}. The function should export a model object which minimizes the sum of losses for the dataset (y,X). Any model format is acceptable, as long as it can be read by \code{get_loss}. The (optional) input \code{start} should also take the same format as the output of \code{minimize_weighted_loss}. Regularization constraints should also be accounted for in this function.}

\item{get_loss}{(optional) a function which takes named inputs \code{model}, \code{y}, and \code{X}, and returns a vector of losses. The input \code{model} should be in the same format of the returned value of \code{minimize_weighted_loss}.}

\item{nrep_sample}{an integer between 2 and length(y) determining the level of approximation for empirical MR. If nrep_sample=2, e_divide is used. If nrep_sample=length(y), all combinations are computed. See \code{\link{get_full_sample}}.}

\item{loop_ind_args}{A list of arguments not changing over the binary search (e.g., \code{crossprod(X)}).}

\item{eps}{performance threshold for MCR, on an absolute scale.}
}
\value{
\code{precompute_mcr_objects_and_functions} returns a list containing \itemize{
\item \code{suff_stats} - a list of precomuted objects that do not change over iterations of the MCR binary search loop.
\item \code{get_ld_h_min} - (advanced or internal use) a function that minimizes of equations in the form of  \eqn{h_\gamma}, which has loop-dependent ("ld") arguments. Takes arguments \code{loop_dep_args} (optional), \code{suff_stats} (above), \code{s} (-1 for MCR-, +1 for MCR+), and \code{gam} (coefficient in \eqn{h_\gamma}, see details in main paper). If only computing MR (see get_MR_general), this element may be NULL. 
\item \code{get_MR} - a function taking \code{model} and \code{suff_stats} as input (see above), and which computes the MR of the model using the precomputed object \code{suff_stats}.
}

\code{get_empirical_MCR} returns a list containing the MCR range, the epsilon value, and more detailed results (\code{minus} and \code{plus}) for each end of the MCR interval (see \code{\link{getMCR_internal}} for more details).
}
\description{
Main functions for computing model reliance (MR) and model class reliance (MCR). For further details, see \code{\link{getMCR_internal}}.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_search_mcr.r
\name{CV_mod}
\alias{CV_mod}
\title{General function for cross-validation}
\usage{
CV_mod(y, X, n_folds = min(15, length(y)), fit_fun, report_fun,
  fit_in_sample = FALSE, verbose = FALSE)
}
\arguments{
\item{y}{outcome vector}

\item{X}{covariate matrix}

\item{n_folds}{number of folds for CV}

\item{fit_fun}{takes \code{y}, \code{X} as named arguments and returns a prediction model that can be entered into \code{report_fun}.}

\item{report_fun}{has arguments \code{mod}, in the form of the returned value of \code{fit_fun}, as well as \code{y} and \code{X}, in the same format as the inputs \code{y} and \code{X} to the overall function \code{CV_mod}. The returned value of \code{report_fun} should be a numeric vector.}

\item{fit_in_sample}{whether the within-fold performance metrics should also be reported, in addition to the out-of-fold metrics.}

\item{verbose}{show progress bar}
}
\value{
The mean of \code{report_fun}'s out-of-fold output, averaged across folds. If \code{fit_in_sample=TRUE}, the within-fold output is also shown.
}
\description{
Calculate the cross-validated (CV) loss of a model fitting algorithm \code{fit_fun}.
}
